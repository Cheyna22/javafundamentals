import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public String linter(Path file) {
        Charset charset = Charset.forName("US-ASCII");
        try(BufferedReader reader = Files.newBufferedReader(Path, charset))
    }



    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
    }
}

// EX: reading Alice in Wonderland how many times characrers show up
/**
 * set up String[] array for characters
 * String[] characters = new String[] {"Alice", "Cheshire Cat", "Hatter", "Queen of Hearts"};
 *
 * read the book (details, paths, etc)
 * Charset charset = Charset.forName("US-ACSII");
 * try/catch - try to do this thing, if there is an error catch it with a catch block
 * when creating new Path() below - choose the first one
 * HashMap<String, Integer> counts =  new HashMap<>();
 * for(String character : characters){
 *     counts.put(character, 0);
 * }
 * try(BufferedReader reader =  Files.newBufferedReader(fileSystems.getDefault().getPath("where the file is", "file name"), charset) {
 *      String currentLine = "";
 *      while(currentLine!= null) {
 *          // to make sure it is working put println here and ./gradlew run
 *          System.out.println(currentLine);
 *          //if i see one of the names (check to see if one string contains another string .contains())
 *          for(String character : characters) {
 *             if(currentLine.contains(character)) {
 *                counts.put(character, counts.get(character) + 1);
 *             }
 *             currentLine =  reader.readLine();
 *            }
 *            // should print out counts of each names in hashmap
 *            System.out.println(counts);
 *     } catch (IOException e) {
 *         System.out.println(e);
 *       }
 *
 *       You can interate through a HashMap (get keySet and then interate throught that)
 *
 * tracking the names
 * if i see one of the names:
 *  Increment the number of times seen
 *  print out what I found
 *
 *
 *
 */
